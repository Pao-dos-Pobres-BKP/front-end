stages: [local_test_build, build_and_push, mirror_to_github, deploy_to_ec2]

variables:
  DOCKER_BUILDKIT: "1"
  ECR_URL: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
  IMAGE: "$ECR_URL/$ECR_REPO"

local_test_build:
  stage: local_test_build
  image: node:20
  script:
    - yarn install
    - yarn build
    # - yarn test

build_and_push:
  stage: build_and_push
  image: docker:26
  before_script:
    - apk add --no-cache aws-cli
    - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$ECR_URL"
    - docker system prune -af || true
    - docker builder prune -af || true
    - docker image prune -af || true
  script:
    - echo "VITE_API_BASE_URL=$VITE_API_BASE_URL"
    - docker build --build-arg VITE_API_BASE_URL="$VITE_API_BASE_URL" --build-arg VITE_BASE_PATH="/fe/" -t "$IMAGE:$CI_COMMIT_SHORT_SHA" -t "$IMAGE:latest" -f Dockerfile .
    - docker push "$IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    - main
    - master

mirror_to_github:
  stage: mirror_to_github
  image: alpine:3.20
  before_script:
    - apk add --no-cache git openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
    - git config --global user.email "ci-bot@your-org"
    - git config --global user.name "GitLab CI"
  script:
    - set -e
    - git clone --mirror "$CI_REPOSITORY_URL" mirror.git
    - cd mirror.git
    - git remote add github "$GITHUB_REPO_SSH"
    - git push --mirror github

deploy_to_ec2:
  stage: deploy_to_ec2
  image: alpine:3.20
  needs: ["build_and_push"]
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_EC2_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
  script:
    - |
      set -e
      IMAGE_TAG="$CI_COMMIT_SHORT_SHA"
      IMAGE="$ECR_URL/$ECR_REPO:$IMAGE_TAG"
      echo "Deploying $IMAGE to service '$SERVICE_NAME' on $SSH_HOST"

      # Run everything on EC2:
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "$SSH_USER@$SSH_HOST" "
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
          sudo docker login --username AWS --password-stdin $ECR_URL && \
        sudo docker pull $IMAGE && \
        sudo docker service update --with-registry-auth --image $IMAGE --env-add VITE_API_BASE_URL="$VITE_API_BASE_URL" $SERVICE_NAME
      "
  only:
    - main
    - master
